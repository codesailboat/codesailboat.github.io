<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Welcome to My Blog!</title>
    <link>https://codesailboat.github.io/categories/golang/</link>
    <description>Recent content in golang on Welcome to My Blog!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codesailboat.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>14_最长公共前缀</title>
      <link>https://codesailboat.github.io/study/14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codesailboat.github.io/study/14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid>
      <description>解题思路①   按列进行比较，以第一行为基准，当第一行某列和其他行该列字符不相同时，前面几列即为最长公共前缀。将第一行该列字符置为&#39;\0&#39;(字符串结束标志)，而后return
  程序开始应该判断字符串数组是否为空，可以判断长度是否为零，为零return空字符串
  程序结束应该写return，因为当第一行被其他行包含时，循环中的return并不会执行
  代码 char * longestCommonPrefix(char ** strs, int strsSize){ int i; int j; if( strsSize == 0) { return &amp;#34;&amp;#34;; } for(j=0; *(*strs+j) != &amp;#39;\0&amp;#39;; j++ ) //列  { for( i=1; i&amp;lt;strsSize; i++) //行  { if( *(*strs+j) != *(*(strs+i)+j) ) { *(*strs+j) = &amp;#39;\0&amp;#39;; return *strs; } } } return *strs; } 解题思路②  待补充  END  </description>
    </item>
    
  </channel>
</rss>