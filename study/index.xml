<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Studies on Welcome to My Blog!</title>
    <link>https://codesailboat.github.io/study/</link>
    <description>Recent content in Studies on Welcome to My Blog!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codesailboat.github.io/study/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C 学习</title>
      <link>https://codesailboat.github.io/study/c%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codesailboat.github.io/study/c%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>1. extern &amp;ldquo;C&amp;rdquo;  &amp;lsquo;extern &amp;ldquo;C&amp;rdquo; &amp;lsquo;和&amp;rsquo;__cplusplus&amp;rsquo;的主要作用就是都是为了实现C++与C兼容,使C++代码能够正确调用C语言代码。加上extern &amp;ldquo;C&amp;quot;后，会指示编译器这部分代码按C语言的进行编译。c++中定义了__cplusplus，C语言中没有该定义。  #ifdef __cplusplus extern &amp;#34;C&amp;#34; { #endif  void *memset(void* ,int , size_t); #ifdef __cplusplus } #endif 2. extern &amp;ldquo;FORTRAN&amp;rdquo;  待补充  </description>
    </item>
    
    <item>
      <title>Source_Insight_4</title>
      <link>https://codesailboat.github.io/study/source_insight_4/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codesailboat.github.io/study/source_insight_4/</guid>
      <description>Source insight 4学习记录 1.设置  浅绿背景颜色 RGB: 199 237 204  2.快捷键  高亮当前页面中光标所在单词：F8 上一次光标的位置：Alt+, 后一次光标的位置:Alt+. 参考：https://www.cnblogs.com/jonwei/articles/9594081.  3.使用   Add all 和 Add Tree 的区别
 Add all ：添加文件目录下顶层文件，不包含子文件夹下的内容。 Add Tree ：添加文件夹下的顶层文件，且递归添加所有子文件夹下的代码文件。简言之添加所有文件。    </description>
    </item>
    
    <item>
      <title>14_最长公共前缀</title>
      <link>https://codesailboat.github.io/study/14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codesailboat.github.io/study/14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid>
      <description>解题思路①   按列进行比较，以第一行为基准，当第一行某列和其他行该列字符不相同时，前面几列即为最长公共前缀。将第一行该列字符置为&#39;\0&#39;(字符串结束标志)，而后return
  程序开始应该判断字符串数组是否为空，可以判断长度是否为零，为零return空字符串
  程序结束应该写return，因为当第一行被其他行包含时，循环中的return并不会执行
  代码 char * longestCommonPrefix(char ** strs, int strsSize){ int i; int j; if( strsSize == 0) { return &amp;#34;&amp;#34;; } for(j=0; *(*strs+j) != &amp;#39;\0&amp;#39;; j++ ) //列  { for( i=1; i&amp;lt;strsSize; i++) //行  { if( *(*strs+j) != *(*(strs+i)+j) ) { *(*strs+j) = &amp;#39;\0&amp;#39;; return *strs; } } } return *strs; } 解题思路②  待补充  END  </description>
    </item>
    
    <item>
      <title>Hugo博客搭建</title>
      <link>https://codesailboat.github.io/study/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://codesailboat.github.io/study/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AD%A6%E4%B9%A0/</guid>
      <description>一、软件安装 1.安装hugo   GitHub官网的Hugo Releases下载对应版本
Hugo Releases： https://github.com/gohugoio/hugo/releases windows版本已经是成品，直接下载解压，在环境变量path里添加文件夹路径即可。注意不要直接新建，正确流程如下:
变量path -&amp;gt; 编辑 -&amp;gt; 新建 -&amp;gt; 选择文件夹路径   2.安装git   官网下载较慢，可自己百度下载   二、本地创建博客 1.创建站点   打开命令行（win+R，输入cmd),移动目录到希望保存博客网页的目录 命令行中输入 hugo new site myblog
其中 myblog 为文件夹名，myblog文件夹 即为博客根目录   2.创建博客   移动到myblog目录下，命令行中输入: hugo new first.md
first为文件名 用markdown语言进行博客编写   3.下载并设置博客主题   主题库地址： https://themes.gohugo.io 命令行目录移至博客根目录，命令行中输入对应路径进行克隆，具体信息可在主题下方直接复制即可。
以m10c主题为例，： 复制输入： git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c
注: 执行此操作之前确保git成功安装并配置成功，在命令行初始目录下输入 git 有输出即配置成功。   4.</description>
    </item>
    
  </channel>
</rss>